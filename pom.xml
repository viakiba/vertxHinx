<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ohayoo.whitebird</groupId>
    <artifactId>hinx</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>GameServer</name>
    <description>基于Vertx的轻量级适应多网络多架构的游戏服务器脚手架</description>

    <!--私服文档 https://bytedance.feishu.cn/docs/doccnSq0AS5Ip61CzY6wOcB5Aof-->
    <distributionManagement>
        <repository>
            <id>bytedance-repo</id>
            <url>https://maven.byted.org/repository/releases</url>
        </repository>
        <snapshotRepository>
            <id>bytedance-repo</id>
            <url>https://maven.byted.org/repository/snapshots</url>
        </snapshotRepository>
    </distributionManagement>

    <!-- 从私服拉取依赖  -->
    <repositories>
        <repository>
            <id>bytedance-repo</id>
            <url>https://maven.byted.org/repository/public</url>
        </repository>
    </repositories>

    <!-- 从私服拉取plugin  -->
    <pluginRepositories>
        <pluginRepository>
            <id>bytedance-repo</id>
            <url>https://maven.byted.org/repository/public</url>
        </pluginRepository>
    </pluginRepositories>

    <developers>
        <developer>
            <name>huangpeng.12</name>
            <email>huangpeng.12@bytedance.com</email>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <vertx.version>4.1.2</vertx.version>
        <kotlin.version>1.5.30-RC</kotlin.version>
        <!--linux:linux-x86_64  mac:osx-x86_64 windows:windows-x86_64-->
        <quic.classifier>windows-x86_64</quic.classifier>
    </properties>

    <dependencies>
        <!--   kotlin加持     -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-test</artifactId>
            <version>${kotlin.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-kotlin</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-lang-kotlin-coroutines</artifactId>
            <version>${vertx.version}</version>
        </dependency>

        <!--  vertx 核心基础      -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-core</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <!--  web 实现 -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <!-- 客户端实现 -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-web-client</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <!-- zookeeper集群 / 服务发现 -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-zookeeper</artifactId>
            <version>${vertx.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-log4j12</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- metrics  -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-dropwizard-metrics</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <!-- Reactive PostgreSQL Client 是 PostgreSQL 的客户端，具有简单的 API，专注于可扩展性和低开销。客户端是反应式且非阻塞的，允许使用单个线程处理多个数据库连接。-->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-pg-client</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <!-- Vert.x 客户端允许应用程序与 MongoDB 实例进行交互 非阻塞客户端 -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-mongo-client</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <!-- Vert.x-redis 是与 Vert.x 一起使用的 redis 客户端。  -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-redis-client</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <!-- Reactive MySQL Client 是 MySQL 的客户端，具备 事件驱动 及内存对象映射等特性 -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-mysql-client</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.hibernate.reactive/hibernate-reactive-core -->
        <dependency>
            <groupId>org.hibernate.reactive</groupId>
            <artifactId>hibernate-reactive-core</artifactId>
            <version>1.0.0.CR8</version>
        </dependency>
        <!--  RxJava3   -->
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-rx-java3</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <!--    工具集合    -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>30.1.1-jre</version>
        </dependency>
        <!--jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.12.4</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.12.4</version>
        </dependency>
        <!--    编译增强工具    -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.20</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.vertx</groupId>
            <artifactId>vertx-grpc</artifactId>
            <version>${vertx.version}</version>
        </dependency>
        <!-- protobuf message -->
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>3.17.3</version>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java-util</artifactId>
            <version>3.17.3</version>
        </dependency>
        <!--   excel读表基础组件  文档见代码库   -->
        <dependency>
            <groupId>com.ohayoo.whitebird</groupId>
            <artifactId>common-excel</artifactId>
            <version>1.1-SNAPSHOT</version>
        </dependency>
        <!--   封装的热修基础实现组件 groovy&instrument     -->
        <dependency>
            <groupId>com.ohayoo.whitebird</groupId>
            <artifactId>common-hotfix</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>
        <!--   封装的对接游戏云基础能力的基础组件     -->
        <dependency>
            <groupId>com.ohayoo.whitebird</groupId>
            <artifactId>common-game-cloud</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <!-- KCP  https://github.com/l42111996/java-Kcp -->
        <dependency>
            <groupId>com.github.l42111996</groupId>
            <artifactId>kcp-base</artifactId>
            <version>1.6</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-simple</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.l42111996</groupId>
            <artifactId>kcp-lockStepSynchronization</artifactId>
            <version>1.6</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-simple</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.l42111996</groupId>
            <artifactId>kcp-fec</artifactId>
            <version>1.6</version>
            <exclusions>
                <exclusion>
                    <artifactId>slf4j-simple</artifactId>
                    <groupId>org.slf4j</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--  QUIC    区分操作系统  -->
        <dependency>
            <groupId>io.netty.incubator</groupId>
            <artifactId>netty-incubator-codec-quic</artifactId>
            <version>0.0.17.Final</version>
            <classifier>${quic.classifier}</classifier>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>com.bytedance</groupId>-->
<!--            <artifactId>tcc-general-client-core</artifactId>-->
<!--            <version>0.0.4-SNAPSHOT</version>-->
<!--        </dependency>-->

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>false</addClasspath>
                            <classpathPrefix>libs/</classpathPrefix>
                            <mainClass>
                                com.ohayoo.whitebird.Start
                            </mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/libs</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
                <version>${kotlin.version}</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>test-compile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <jvmTarget>${maven.compiler.target}</jvmTarget>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>testCompile</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>